######################################################
# 2021 OD YAML card to simulate photons in nEXO's outer detector
# Contact: Emma Klemets (emma.klemets@mail.mcgill.ca)  # Modified by Ruijia Yang on March 28, 2022 for OD Reflectivities studies, not saving all variables.
######################################################
Version: 2019 nEXO Baseline
ChromaPath: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/'
ChromaImage: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/Chroma.sif'

Detector:                                   # Define parameters for the construction of the detector geometry
  DetectorName: nEXO_OD                        # Defines detector name 
  PathToDetector: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/Geometry/OD/UniformPMTVariations/OD_Uniform_127_PMT_June22_V4/'
  OpticalProperties: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/Yaml/OD/OptProp_OC00_ST00.yaml' # Location of YAML card that contains optical properties
  CacheName: nEXO_OD # Location where geometry will be cached for rerunning same simulation
  ReflectivityData: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/Data/' # Location of reflectivity data for PMTs ???
  Save: True                                # Boolean that decides if geometry will be saved 
  BuildDetector: FromSTL                  # [FromSTL, FromMesh, FromCache] Geometry can either be rebuild from scratch using STL or a prebuild geomtry can be loaded via Pickle
  Center: OuterCryostat                     # Defines which component will be used to define the coordinate system
  Detector: PMT                        # Defines which component has detecting surface and will be used to define readout channels
  DetectorOrientation: CylinderBarrel       # [CylinderBarrel, CylinderCap] Orientation of photodetectors, only important if surface of detector component is divided based on orientation
  FiducialVolume:                           # Choose components that will be used to define the fidicual volume
    Top: Support                              # Component that defines max z position 
    Bottom: WaterTank                         # Component that defines min z position 
    Radius: WaterTank            # Component that defines max r position 
  FiducialHeightCut: 0.0                     # Defines standoff in the z direction wrt Top and Bottom in FiducialVolume
  FiducialRadialCut: 0.0                     # Define standoff in the radial direction wrt Radius in FiducialVolume
  SkinVolume:                               # Choose components that will be used to define the skin volume, max and min z will be same as for FiducialVolume
    InnerRadius: WaterTank      # Component that defines min r position 
    OuterRadius: WaterTank                       # Component that defines max r position 
    Top: Support                      # Component that defines max z position 
    Bottom: WaterTank                   # Component that defines min z position 
  SkinStandoffTop: 0.5                      # Defines standoff in the z direction wrt Top and Bottom in FiducialVolume
  SkinStandoffBottom: 0.5                   # Define standoff in the radial direction wrt Radius in FiducialVolume
  Rotation: None
  OutsideMaterial: Water #Vacuum            #Sets material outside the detector

Simulation:                                 # Define parameters for the simulation of events inside the specifed volume
  Generator: MuonInput='/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/Data/OD/millionMuons_part00.csv' #ExampleMuonInput_100.csv'  #million100_part00.csv' #Beam, -Z #Flashlight, 1.0                # Where and how the photons are generated - to add muon stuff here
  NumberOfPhotons: 100                      # number of photons per event 
  NumberOfSources: 1000      # number of events = number of muons
  NumberOfRuns: 1                           # number of runs define how often NumberOfPhotons x NumberOfSources will be simulated
  PropagationMode: Total                    # [Total, Step] define if only photon origin and last photon location should be saved or if step-by-step information is required
  PathPlot: False                       #If on step mode, can supress the plotting for each run if False
  PhotonLocation: MuonFile #Point=0,0,-3100 #PointCher=0,2000,-3200        # [Center, UniformFV, UniformSkin, UniformXenon, R=, Z=] Define where events should be generated 
  OutputPath: '/gpfs/slac/staas/fs1/g/exo/exo_data8/exo_data/users/yangrj/chromasim/chroma-simulation/Output/OD_2021/Refl0000/' # Location where simulation data is saved
  OutputFilename: OD_Refl_OC00_ST00_v4                 # Additional string variable to name current study
  OutputFiletype: HDF5                      # Define output format, currently only HDF5
  SaveVariables: ['NumDetected', 'Flags', 'PhotonTime', 'DetectedPos', 'DetectorHit']
  #SaveVariables: ['Origin', 'NumDetected', 'Flags', 'LastHitTriangle', 'FinalPosition', 'InitialPosition', 'DetectedPos', 'DetectorHit']

# Definitions of surface properties based on values defined in OpticalProperties
# Each component need to be assigned an inner and outer material. 
# The inner material 'Inside' always has only one component
# The outer material 'Outside', 'Surface' and 'Color' can have multiple entries depending on the geometry (i.e. Quartz facing LXe on one side and Silicon on the other)
# If either one of 'Outside', 'Surface' and 'Color' have 3 entries all have to have 3 entries
# The orientation of the 3 properties is given according to DetectorOrientation
# For CylinderBarrel, 1st entry is facing radially inward, the 2nd radially outward and the 3rd perpendicular to the radial direction
# Colors are defined in Detector.py
Components:
  WaterTank:
    Inside: [FullAbsorb]
    Outside: [Water]
    Surface: [ReflectiveFoil] #we want to detect where the photons hit on the inside of the water tank
    Color: [Blue]

  #should these two have a fully absorping surface?
  OuterCryostat:
    Inside: [FullAbsorb]
    Outside: [Water]
    Surface: [OC_surface]
    Color: [Gold]
  Support:
    Inside: [FullAbsorb]
    Outside: [Water]
    Surface: [StainlessSteel]
    Color: [Grey]
  PMT:
    Inside: [Vacuum]
    Outside: [Water]
    Surface: [Detecting_PMT]
    Color: [Red]
    # CoverGas: #not implemented yet
    #Inside: [Nitrogen]
    #Outside: [Water]
    #Surface: [Nitrogen] 
    #Color: [Tspt] 
